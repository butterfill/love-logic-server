template(name='tree_ex')
  //- Display something like ‘Topic: Rules of Proof for Identity --- normal exercises for UK_W20_PH126’
  +topic_header

  +tree_ex_display_question

  h5 Your answer:
  #treeEditor #{displayEditableTreeInDiv}

  if requireStateIfValid
    +TorF_questions sentences=stateIfValidSentences
  if requireStateIfConsistent
    +TorF_questions sentences=stateIfConsistentSentences

  .row: .col.s12
    p#feedback
  .row: .col.s12
    button#checkProof.btn.waves-effect.grey check
    button#resetProof.btn.waves-effect.grey reset
    button#convert-to-symbols.btn.waves-effect.grey convert to symbols

    +submitted_answer
  
  +help_with_this_exercise

  .right
    +ask_for_help
    +submit_btn
        
  +next_exercise

template(name="tree_ex_display_question")

  if requireStateIfValid
    h4 Create a tree to determine whether this argument is valid.
  else
    if requireStateIfConsistent
      h4 Create a tree to determine whether these sentences are consistent.
    else
      h4 Create a tree for  
        if isForArgument
          | this argument.
        else
          | these sentences.
  
  if requireComplete
    p Your tree must be complete.
  if requireClosed
    p Your tree must be closed.
    
  
  .row
    if isForArgument
      .col.s6
        p premises (#{premises.length}):
        if hasPremises
          ul.collection
            each premises
              li.collection-item #{this}
        else
          ul.collection
            li.collection-item [No premises]
      .col.s6
        p conclusion:
        ul.collection
          li.collection-item #{conclusion}
    unless isForArgument
      p #{theSentences}
    

template(name="tree_ex_display_answer")
  if dialect
    p Dialect: #{dialect}
  p.monospace.grey.lighten-2(style="white-space:pre") 
    div(id="#{answerId}") #{displayStaticAnswerInDiv}

  if requireStateIfValid
    ul.collection
      each stateIfValidSentences
        li.collection-item 
          span.theSentence #{theSentence}
          span.right #{value}
    
  if requireStateIfConsistent
    ul.collection
      each stateIfConsistentSentences
        li.collection-item 
          span.theSentence #{theSentence}
          span.right #{value}
    
